/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import DAO.ModelDAO.DatBanDAO;
import DAO.impl.KhuVucImp;
import Model.BanAn;
import Model.ChiTietDatBan;
import Model.ChiTietHoaDon;
import Model.DatBan;
import Model.HoaDon;
import Model.KhuVuc;
import java.awt.Image;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;



/**
 *
 * @author baoha
 */
public class ICONBan extends javax.swing.JPanel {
    private BanAn b = new BanAn();
    private DatBan db = new DatBan();
    private HoaDon hd = new HoaDon();
    private ChiTietHoaDon cthd = new ChiTietHoaDon();
    /**
     * Creates new form ICONBan
     */
    public ICONBan(BanAn b ,DatBan db) {
        this.b = b;
        this.db = db;
        initComponents();
        
        init();
    }
private void showOrderDetail() {
    KhuVucImp dao = new KhuVucImp();
    int soBan = Integer.parseInt(lblBan.getText().replace("Bàn : ", "").trim());
    HoaDon hd = dao.findByIdHoaDon2(soBan);

    if (hd != null) {
        OrderDetailDialog dialog = new OrderDetailDialog(null, hd);
        dialog.setVisible(true);   // hiện form nhỏ
    } else {
        JOptionPane.showMessageDialog(this, 
                "Không tìm thấy hóa đơn cho bàn " + soBan, 
                "Thông báo", JOptionPane.WARNING_MESSAGE);
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAnh = new javax.swing.JLabel();
        lblBan = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        lblGioDat = new javax.swing.JLabel();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lblAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/BanDat.jpg"))); // NOI18N

        lblBan.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblBan.setText("BÀN :");

        lblTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrangThai.setText("Trạng thái: ");

        lblGioDat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGioDat.setText("Giờ đặt:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(lblBan, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblGioDat, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lblBan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTrangThai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGioDat)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        showOrderDetail();
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JLabel lblBan;
    private javax.swing.JLabel lblGioDat;
    private javax.swing.JLabel lblTrangThai;
    // End of variables declaration//GEN-END:variables

    private void init() {
       KhuVucImp dao = new KhuVucImp();
lblBan.setText("Bàn : " + b.getSoBan());

String trangThai = b.getTrangThai();
if ("Trống".equals(trangThai)) {
    lblTrangThai.setText("Trạng thái: " + trangThai);
    lblGioDat.setText("Chưa đặt");
    setImage("src/img/BanTrong.png");

} else if ("Đã đặt".equals(trangThai)) {
    lblTrangThai.setText("Trạng thái: " + trangThai);

    // ✅ Lấy mã bàn đúng
    String maBan = b.getMaBan();   // nếu có getMaBan()
    // String maBan = b.getSoBan(); // nếu MaBan trong DB lưu dạng số bàn

    HoaDon hd = dao.findByIdHoaDon(maBan);

    if (hd != null && hd.getNgayLap() != null) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        lblGioDat.setText("Thời gian: " + sdf.format(hd.getNgayLap()));
    } else {
        lblGioDat.setText("Thời gian: Chưa có hóa đơn");
    }
    
    setImage("src/img/BanDat.jpg");

} else {
    lblTrangThai.setText("Trạng thái: Không xác định");
    lblGioDat.setText("Chưa rõ");
    lblAnh.setIcon(null);
}

}

private void setImage(String path) {
    File file = new File(path);
    if (file.exists()) {
        ImageIcon icon = new ImageIcon(path);
        Image img = icon.getImage().getScaledInstance(326, 325, Image.SCALE_SMOOTH);
        lblAnh.setIcon(new ImageIcon(img));
    } else {
        lblAnh.setIcon(null);
        System.out.println("Không tìm thấy ảnh: " + path);
    }
}

}

