/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.ModelController.NhanVienController;
import DAO.ModelDAO.NhanVienDAO;
import DAO.impl.NhanVienImpl;
import Model.NhanVien;
import Util.UDialog;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ExpertBook
 */
public class QLNV extends javax.swing.JPanel implements NhanVienController{
    private String tenAnh;
    NhanVienDAO dao = new NhanVienImpl();
    List<NhanVien> items = new ArrayList<>();
    /**
     * Creates new form QLNV
     */
    public QLNV(boolean visible) {
        initComponents();
        
 setButtonVisible(visible);
    }
    public void setButtonVisible(boolean visible) {
    jButton1.setVisible(visible);
} 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdoGroupVaiTro = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        txtEmail = new javax.swing.JTextField();
        dcNgaySinh = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblAnh = new javax.swing.JLabel();
        txtLuong = new javax.swing.JTextField();
        txtTenNV = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        rdoQuanLy = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        rdoPhucVu = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        btnTiemkiem = new javax.swing.JButton();
        btnvecuoi = new javax.swing.JButton();
        btntien = new javax.swing.JButton();
        btntruoc = new javax.swing.JButton();
        btnvedau = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1080, 560));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setContentAreaFilled(false);
        jButton1.setEnabled(false);
        jButton1.setFocusable(false);
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 2, 1240, 80));

        jPanel1.setBackground(new java.awt.Color(173, 139, 115));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản Lý Nhân Viên");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1736, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(15, 15, 15))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, -1));

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Họ tên", "Tên vai trò", "Mật khẩu", "Email", "Lương cơ bản ", "Ngày sinh "
            }
        ));
        tblNhanVien.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblNhanVienAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 1910, 520));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 890, 270, 30));
        add(dcNgaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 990, 270, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Ngày sinh:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 990, 170, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 890, 160, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 174, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 770, 200, 176));
        add(txtLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 940, 270, 30));
        add(txtTenNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 790, 270, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Tên vai trò:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 840, 170, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Mã nhân viên:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 740, 170, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon thêm ảnh.png"))); // NOI18N
        jButton2.setText("Chọn ảnh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 960, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Tên nhân viên:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 790, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Lương cơ bản:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 940, 170, -1));

        txtMaNV.setEnabled(false);
        add(txtMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 740, 270, 30));

        rdoGroupVaiTro.add(rdoQuanLy);
        rdoQuanLy.setText("Quản lý");
        rdoQuanLy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoQuanLyActionPerformed(evt);
            }
        });
        add(rdoQuanLy, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 850, -1, -1));

        rdoGroupVaiTro.add(rdoNhanVien);
        rdoNhanVien.setText("Nhân Viên");
        add(rdoNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 850, -1, -1));

        rdoGroupVaiTro.add(rdoPhucVu);
        rdoPhucVu.setText("Phục vụ");
        add(rdoPhucVu, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 850, -1, -1));

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon thêm.png"))); // NOI18N
        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 120, 110, 40));

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon xóa.png"))); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 120, 110, 40));

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon sửa.png"))); // NOI18N
        btnSua.setText("SỬA");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 120, 110, 40));

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon làm mới.png"))); // NOI18N
        btnLamMoi.setText("LÀM MỚI");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        add(btnLamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1590, 120, 130, 40));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel14.setText("Tìm kiếm:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));
        add(txtFind, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 280, 40));

        btnTiemkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/find.png"))); // NOI18N
        btnTiemkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiemkiemActionPerformed(evt);
            }
        });
        add(btnTiemkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 120, -1, -1));

        btnvecuoi.setBackground(new java.awt.Color(173, 139, 115));
        btnvecuoi.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnvecuoi.setForeground(new java.awt.Color(255, 255, 255));
        btnvecuoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon về cuối.png"))); // NOI18N
        btnvecuoi.setText("Về cuối");
        btnvecuoi.setMaximumSize(new java.awt.Dimension(50, 20));
        btnvecuoi.setMinimumSize(new java.awt.Dimension(50, 20));
        btnvecuoi.setPreferredSize(new java.awt.Dimension(50, 20));
        btnvecuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvecuoiActionPerformed(evt);
            }
        });
        add(btnvecuoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1550, 770, 130, 40));

        btntien.setBackground(new java.awt.Color(173, 139, 115));
        btntien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btntien.setForeground(new java.awt.Color(255, 255, 255));
        btntien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon tiến.png"))); // NOI18N
        btntien.setText("Tiến");
        btntien.setMaximumSize(new java.awt.Dimension(50, 20));
        btntien.setMinimumSize(new java.awt.Dimension(50, 20));
        btntien.setPreferredSize(new java.awt.Dimension(50, 20));
        btntien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntienActionPerformed(evt);
            }
        });
        add(btntien, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 770, 130, 40));

        btntruoc.setBackground(new java.awt.Color(173, 139, 115));
        btntruoc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btntruoc.setForeground(new java.awt.Color(255, 255, 255));
        btntruoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon trước.png"))); // NOI18N
        btntruoc.setText("Trước");
        btntruoc.setMaximumSize(new java.awt.Dimension(50, 20));
        btntruoc.setMinimumSize(new java.awt.Dimension(50, 20));
        btntruoc.setPreferredSize(new java.awt.Dimension(50, 20));
        btntruoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntruocActionPerformed(evt);
            }
        });
        add(btntruoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 770, 120, 40));

        btnvedau.setBackground(new java.awt.Color(173, 139, 115));
        btnvedau.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnvedau.setForeground(new java.awt.Color(255, 255, 255));
        btnvedau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon về đầu.png"))); // NOI18N
        btnvedau.setText("Về đầu");
        btnvedau.setMaximumSize(new java.awt.Dimension(50, 20));
        btnvedau.setMinimumSize(new java.awt.Dimension(50, 20));
        btnvedau.setPreferredSize(new java.awt.Dimension(50, 20));
        btnvedau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvedauActionPerformed(evt);
            }
        });
        add(btnvedau, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 770, 120, 40));

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setContentAreaFilled(false);
        jButton3.setEnabled(false);
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1670, 1080));
    }// </editor-fold>//GEN-END:initComponents

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        edit();
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void tblNhanVienAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblNhanVienAncestorAdded
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"Mã NV", "Họ Tên", "Tên vai trò", "Mật Khẩu", "Email", "Lương Cơ Bản", "Ngày Sinh", "Ảnh"}, 
            0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Không cho sửa bất kỳ ô nào
            }
        };
        tblNhanVien.setModel(model);

        fillToTable();
        
    }//GEN-LAST:event_tblNhanVienAncestorAdded

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
JFileChooser chooser = new JFileChooser();
chooser.setDialogTitle("Chọn ảnh từ máy");
chooser.setFileFilter(new FileNameExtensionFilter("Hình ảnh", "jpg", "png", "jpeg", "gif"));

int result = chooser.showOpenDialog(this);
if (result == JFileChooser.APPROVE_OPTION) {
    File fileChon = chooser.getSelectedFile();
    String tenFile = fileChon.getName();

    File thuMucLuu = new File("src/img");
    if (!thuMucLuu.exists()) {
        thuMucLuu.mkdirs();
    }

    File fileDich = new File(thuMucLuu, tenFile);
    try {
        // Copy ảnh vào thư mục dự án
        Files.copy(fileChon.toPath(), fileDich.toPath(), StandardCopyOption.REPLACE_EXISTING);
        tenAnh = tenFile;

        // Hiển thị ảnh với kích thước 150x150
        ImageIcon icon = new ImageIcon("src/img/" + tenFile);
        Image img = icon.getImage().getScaledInstance(198, 174, Image.SCALE_SMOOTH);
        lblAnh.setIcon(new ImageIcon(img));
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi sao chép ảnh!");
    }
}

    




    }//GEN-LAST:event_jButton2ActionPerformed

    private void rdoQuanLyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoQuanLyActionPerformed
        // TODO add your hang code here:
    }//GEN-LAST:event_rdoQuanLyActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        create();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnTiemkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiemkiemActionPerformed
        // TODO add your handling code here:
        fillToTableTheoDieuKien();
    }//GEN-LAST:event_btnTiemkiemActionPerformed

    private void btnvecuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvecuoiActionPerformed
        // TODO add your handling code here:
        moveLast();
    }//GEN-LAST:event_btnvecuoiActionPerformed

    private void btntienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntienActionPerformed
        // TODO add your handling code here:
        moveNext();
    }//GEN-LAST:event_btntienActionPerformed

    private void btntruocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntruocActionPerformed
        // TODO add your handling code here:
        movePrevious();
    }//GEN-LAST:event_btntruocActionPerformed

    private void btnvedauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvedauActionPerformed
        // TODO add your handling code here:
        moveFirst();
    }//GEN-LAST:event_btnvedauActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTiemkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btntien;
    private javax.swing.JButton btntruoc;
    private javax.swing.JButton btnvecuoi;
    private javax.swing.JButton btnvedau;
    private com.toedter.calendar.JDateChooser dcNgaySinh;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.ButtonGroup rdoGroupVaiTro;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoPhucVu;
    private javax.swing.JRadioButton rdoQuanLy;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtTenNV;
    // End of variables declaration//GEN-END:variables
    private void hienThiAnh(String duongDan) {
    ImageIcon icon = new ImageIcon(duongDan);
    Image img = icon.getImage().getScaledInstance(198, 174, Image.SCALE_SMOOTH);
    lblAnh.setIcon(new ImageIcon(img));
    }
    @Override
    public void open() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
public void setForm(NhanVien entity) {
    txtMaNV.setText(entity.getMaNV());
    txtTenNV.setText(entity.getHoTen());
    if (entity.getTenVaiTro()== null) {
            // Không chọn gì
            rdoQuanLy.setSelected(false);
            rdoNhanVien.setSelected(false);
            rdoPhucVu.setSelected(false);
        } else {
            switch (entity.getTenVaiTro()) {
                case "Quản lý":
                    rdoQuanLy.setSelected(true);
                    break;
                case "Nhân viên":
                    rdoNhanVien.setSelected(true);
                    break;
                case "Phục vụ":
                    rdoPhucVu.setSelected(true);
                    break;
                default:
                    // Không chọn radio button nào nếu giá trị lạ
                    rdoQuanLy.setSelected(false);
                    rdoNhanVien.setSelected(false);
                    rdoPhucVu.setSelected(false);
            }
    txtEmail.setText(entity.getEmail());
    txtLuong.setText(String.valueOf(entity.getLuongCoBan()));

    if (entity.getNgaySinh() != null) {
        dcNgaySinh.setDate(entity.getNgaySinh());
    }

    String tenAnh = entity.getAnh(); // chỉ là tên file, ví dụ: nv01.jpg

    if (tenAnh != null && !tenAnh.isEmpty()) {
        String fullPath = "src/img/" + tenAnh; // Đường dẫn mới
        File file = new File(fullPath);

        if (file.exists()) {
            ImageIcon icon = new ImageIcon(fullPath);
            Image img = icon.getImage().getScaledInstance(206, 176, Image.SCALE_SMOOTH);
            lblAnh.setIcon(new ImageIcon(img));
        } else {
            lblAnh.setIcon(null);
            System.out.println("Không tìm thấy ảnh: " + fullPath);
        }
    } else {
        lblAnh.setIcon(null);
    }

    }
}


    @Override
public NhanVien getForm() {
    NhanVien nv = new NhanVien();
    NhanVienImpl vtDao = new NhanVienImpl();

    nv.setMaNV(txtMaNV.getText().trim());
    nv.setHoTen(txtTenNV.getText().trim());

    String tenVaiTro = null;
    if (rdoQuanLy.isSelected()) {
        tenVaiTro = "Quản lý";
    } else if (rdoNhanVien.isSelected()) {
        tenVaiTro = "Nhân viên";
    } else if (rdoPhucVu.isSelected()) {
        tenVaiTro = "Phục vụ";
    }

    // Lấy mã vai trò từ tên
    int  maVaiTro = vtDao.getMaVaiTro(tenVaiTro);
    nv.setMaVaiTro(maVaiTro);

    nv.setEmail(txtEmail.getText().trim());
    nv.setLuongCoBan(Double.parseDouble(txtLuong.getText().trim()));

    Date ngaySinh = dcNgaySinh.getDate();
    nv.setNgaySinh(ngaySinh);

    nv.setAnh(tenAnh); // ảnh đã chọn

    return nv;
}



    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);
        items = dao.findAll();
        items.forEach(item -> {
            Object[] rowData = {
                item.getMaNV(),
                item.getHoTen(),
                item.getTenVaiTro(),
                item.getMatKhau(),
                item.getEmail(),
                item.getLuongCoBan(),
                item.getNgaySinh(),
                item.getAnh()
            };
            model.addRow(rowData);
        });
    }

    @Override
    public void edit() {
        NhanVien entity = items.get(tblNhanVien.getSelectedRow());
        this.setForm(entity);
        
    }

    @Override
    public void create() {
        if (!Checkall()) return; 

        if (UDialog.confirm("Bạn thực sự muốn thêm nhân viên này?")) {
            NhanVien entity = this.getForm();
            dao.create(entity);
            this.fillToTable();
            this.clear();
            UDialog.alert("Đã thêm thành công");
        }
    }


    @Override
    public void update() {
        if (!Checkall()) return;

        if (UDialog.confirm("Bạn thực sự muốn cập nhật thông tin nhân viên này?")) {
            NhanVien nv = this.getForm();
            dao.update(nv);
            this.fillToTable();
            this.clear();
            UDialog.alert("Cập nhật thành công!");
        }
    }


   @Override
public void delete() {
    int row = tblNhanVien.getSelectedRow();
    if (row == -1) {
        UDialog.alert("Vui lòng chọn nhân viên cần xóa!");
        return;
    }

    String maNV = tblNhanVien.getValueAt(row, 0).toString();
    if (UDialog.confirm("Bạn chắc chắn muốn xóa nhân viên này?")) {
        dao.deleteById(maNV);
        this.fillToTable();
        this.clear();
        UDialog.alert("Xóa nhân viên thành công!");
    }
}


    @Override
    public void clear() {
        this.setForm(new NhanVien());
    }

    @Override
    public void moveFirst() {
        int currentIndex = tblNhanVien.getSelectedRow();
        if (currentIndex == 0) {
            UDialog.alert( "Đã ở vị trí đầu tiên rồi!");
        } else {
            this.moveTo(0);
        }
    }

    @Override
    public void movePrevious() {
        this.moveTo(tblNhanVien.getSelectedRow() - 1);
    }

    @Override
    public void moveNext() {
        this.moveTo(tblNhanVien.getSelectedRow() + 1);
    }

    @Override
    public void moveLast() {
        this.moveTo(tblNhanVien.getRowCount() - 1);
    }

    @Override
    public void moveTo(int rowIndex) {
        if (rowIndex < 0) {
        this.moveLast();
    } else if (rowIndex >= tblNhanVien.getRowCount()) {
        this.moveFirst();
    } else {
        tblNhanVien.clearSelection();
        tblNhanVien.setRowSelectionInterval(rowIndex, rowIndex);
        this.edit();
    }
    }

    @Override
    public boolean Checkall() {
        if (txtTenNV.getText().trim().isEmpty()) {
        UDialog.alert("Vui lòng nhập họ tên nhân viên!");
        txtTenNV.requestFocus();
        return false;
    }

    if (!rdoQuanLy.isSelected() && !rdoNhanVien.isSelected() && !rdoPhucVu.isSelected()) {
        UDialog.alert("Vui lòng chọn chức vụ.");
        return false;
    }

    // Kiểm tra email
    String email = txtEmail.getText().trim();
    if (email.isEmpty()) {
        UDialog.alert("Vui lòng nhập email!");
        txtEmail.requestFocus();
        return false;
    }
    if (!email.matches("^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
        UDialog.alert("Email không đúng định dạng!");
        txtEmail.requestFocus();
        return false;
    }

    // Kiểm tra lương
    if (txtLuong.getText().trim().isEmpty()) {
        UDialog.alert("Vui lòng nhập lương!");
        txtLuong.requestFocus();
        return false;
    }
    try {
        Double.parseDouble(txtLuong.getText().trim());
    } catch (NumberFormatException e) {
        UDialog.alert("Lương phải là số!");
        txtLuong.requestFocus();
        return false;
    }

    // Kiểm tra ngày sinh
    if (dcNgaySinh.getDate() == null) {
        UDialog.alert("Vui lòng chọn ngày sinh!");
        return false;
    }

    return true;
    }
 

    public void fillToTableTheoDieuKien() {
    try {
        NhanVienImpl dao = new NhanVienImpl(); 
        String keyword = txtFind.getText().trim();
        List<NhanVien> list = dao.findByKeyword(keyword);

        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);

        if (list.isEmpty()) {
            UDialog.alert("Không tìm thấy nhân viên nào.");
            return;
        }

        for (NhanVien nv : list) {
            Object[] row = {
                nv.getMaNV(),
                nv.getHoTen(),
                nv.getTenVaiTro(),
                nv.getMatKhau(),
                nv.getEmail(),
                nv.getLuongCoBan(),
                nv.getNgaySinh(),
                nv.getAnh()
            };
            model.addRow(row);
        }
    } catch (Exception e) {
        e.printStackTrace();
        UDialog.alert("Lỗi khi tìm nhân viên!");
    }
}

}
