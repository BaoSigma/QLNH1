/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.ModelController.ChiTietHoaDonController;
import DAO.ModelDAO.ChiTietHoaDonDAO;
import DAO.impl.ChiTietHoaDonImpl;
import Model.ChiTietHoaDon;
import Util.UDialog;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author micro
 */
public class CTHD extends javax.swing.JPanel implements ChiTietHoaDonController{
    ChiTietHoaDonDAO dao = new ChiTietHoaDonImpl();
    List<ChiTietHoaDon> items = new ArrayList<>();
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CTHD.class.getName());

    /**
     * Creates new form ChiTietHoaDon
     */
    public CTHD(boolean visible) {
        initComponents();
    setButtonVisible(visible);
    }
    public void setButtonVisible(boolean visible) {
    jButton1.setVisible(visible);
}/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        txtMaMon = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtGhiChu = new javax.swing.JTextField();
        txtTrangThai = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChiTietHoaDon = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        btnTiemkiem = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setContentAreaFilled(false);
        jButton1.setEnabled(false);
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 2, 1600, 740));

        jPanel3.setBackground(new java.awt.Color(173, 139, 115));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Chi Tiết Hóa Đơn");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1686, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Trạng thái:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 830, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Ghi chú:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 800, 130, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Số lượng:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 860, 130, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Mã món:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 830, 130, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Mã hóa đơn:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 800, 160, -1));

        txtMaHD.setEnabled(false);
        add(txtMaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 800, 270, 20));

        txtMaMon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMaMonMouseClicked(evt);
            }
        });
        txtMaMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaMonActionPerformed(evt);
            }
        });
        add(txtMaMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 840, 270, 20));
        add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 870, 270, 20));
        add(txtGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 800, 270, 20));
        add(txtTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 830, 270, 20));

        tblChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Mã món", "Số lượng", "Ghi chú", "Trạng thái"
            }
        ));
        tblChiTietHoaDon.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblChiTietHoaDonAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblChiTietHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChiTietHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblChiTietHoaDon);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 1920, 600));

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon thêm.png"))); // NOI18N
        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 120, 110, 40));

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon xóa.png"))); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 120, 110, 40));

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon sửa.png"))); // NOI18N
        btnSua.setText("SỬA");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(1450, 120, 110, 40));

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon làm mới.png"))); // NOI18N
        btnLamMoi.setText("LÀM MỚI");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        add(btnLamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1590, 120, 130, 40));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 25)); // NOI18N
        jLabel8.setText("Tìm kiếm:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));
        add(txtFind, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 280, 40));

        btnTiemkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/find.png"))); // NOI18N
        btnTiemkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiemkiemActionPerformed(evt);
            }
        });
        add(btnTiemkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 120, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tblChiTietHoaDonAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblChiTietHoaDonAncestorAdded
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"Mã Hóa Đơn", "Mã Món", "Số Lượng", "Ghi Chú", "Trạng Thái"},
            0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Không cho sửa bất kỳ ô nào
            }
        };
        tblChiTietHoaDon.setModel(model);

        fillToTable();
    }//GEN-LAST:event_tblChiTietHoaDonAncestorAdded

    private void tblChiTietHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChiTietHoaDonMouseClicked
        edit();
    }//GEN-LAST:event_tblChiTietHoaDonMouseClicked

    private void txtMaMonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMaMonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaMonMouseClicked

    private void txtMaMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaMonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        create();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnTiemkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiemkiemActionPerformed
        // TODO add your handling code here:
        fillToTableTheoDieuKien();
    }//GEN-LAST:event_btnTiemkiemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTiemkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblChiTietHoaDon;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtGhiChu;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaMon;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTrangThai;
    // End of variables declaration//GEN-END:variables
@Override
public void setForm(ChiTietHoaDon entity) {
    txtMaHD.setText(entity.getMaHD());
    txtMaMon.setText(entity.getMaMon());
    txtSoLuong.setText(String.valueOf(entity.getSoLuong()));
    txtGhiChu.setText(entity.getGhiChu());
    txtTrangThai.setText(entity.getTrangThai());
    
}

@Override
public ChiTietHoaDon getForm() {
    ChiTietHoaDon ct = new ChiTietHoaDon();

    ct.setMaHD(txtMaHD.getText().trim());
    ct.setMaMon(txtMaMon.getText().trim());

    try {
        ct.setSoLuong(Integer.parseInt(txtSoLuong.getText().trim()));
    } catch (NumberFormatException e) {
        ct.setSoLuong(0);
    }

    ct.setGhiChu(txtGhiChu.getText().trim());
    ct.setTrangThai(txtTrangThai.getText().trim());
    

    return ct;
}

@Override
public void fillToTable() {
    DefaultTableModel model = (DefaultTableModel) tblChiTietHoaDon.getModel();
    model.setRowCount(0);
    items = dao.findAll();

    for (ChiTietHoaDon ct : items) {
        Object[] row = {
            ct.getMaHD(),
            ct.getMaMon(),
            ct.getSoLuong(),
            ct.getGhiChu(),
            ct.getTrangThai()
        };
        model.addRow(row);
    }
}

@Override
public void create() {
    if (!Checkall()) return;

    if (UDialog.confirm("Bạn muốn thêm chi tiết hóa đơn này?")) {
        ChiTietHoaDon entity = getForm();
        dao.create(entity);
        fillToTable();
        clear();
        UDialog.alert("Đã thêm thành công");
    }
}

@Override
public void update() {
    if (!Checkall()) return;

    if (UDialog.confirm("Bạn thực sự muốn cập nhật thông tin khách hàng này?")) {
        ChiTietHoaDon cthd = this.getForm();
        dao.update(cthd);
        this.fillToTable();
        this.clear();
        UDialog.alert("Cập nhật thành công!");
    }
}

@Override
public void delete() {
   int row = tblChiTietHoaDon.getSelectedRow();
if (row == -1) {
    UDialog.alert("Vui lòng chọn dòng để xóa!");
    return;
}

// Lấy dữ liệu an toàn, tránh NullPointerException
Object maHDObj = tblChiTietHoaDon.getValueAt(row, 0);
Object maMonObj = tblChiTietHoaDon.getValueAt(row, 1);


String maHD = maHDObj.toString();
String maMon = maMonObj.toString();

if (UDialog.confirm("Bạn chắc chắn muốn xóa chi tiết này?")) {
    dao.deleteById(maHD); // Nếu cần xóa theo cả maHD và maMon thì sửa dao.deleteById(maHD, maMon)
    fillToTable();
    clear();
    UDialog.alert("Xóa thành công");
}

}

@Override
public void edit() {
    ChiTietHoaDon entity = items.get(tblChiTietHoaDon.getSelectedRow());
    this.setForm(entity);
}

@Override
public void clear() {
    this.setForm(new ChiTietHoaDon());
}

@Override
public boolean Checkall() {
    if (txtMaHD.getText().trim().isEmpty()) {
        UDialog.alert("Vui lòng nhập mã hóa đơn!");
        txtMaHD.requestFocus();
        return false;
    }

    if (txtMaMon.getText().trim().isEmpty()) {
        UDialog.alert("Vui lòng nhập mã món!");
        txtMaMon.requestFocus();
        return false;
    }

    if (txtSoLuong.getText().trim().isEmpty()) {
        UDialog.alert("Vui lòng nhập số lượng!");
        txtSoLuong.requestFocus();
        return false;
    }

    try {
        Integer.parseInt(txtSoLuong.getText().trim());
    } catch (NumberFormatException e) {
        UDialog.alert("Số lượng phải là số!");
        txtSoLuong.requestFocus();
        return false;
    }

    if (txtTrangThai.getText().trim().isEmpty()) {
        UDialog.alert("Vui lòng nhập trạng thái!");
        txtTrangThai.requestFocus();
        return false;
    }


    return true;
}

@Override
public void moveFirst() {
    if (tblChiTietHoaDon.getSelectedRow() == 0) {
        UDialog.alert("Đã ở vị trí đầu tiên!");
    } else {
        moveTo(0);
    }
}

@Override
public void movePrevious() {
    moveTo(tblChiTietHoaDon.getSelectedRow() - 1);
}

@Override
public void moveNext() {
    moveTo(tblChiTietHoaDon.getSelectedRow() + 1);
}

@Override
public void moveLast() {
    moveTo(tblChiTietHoaDon.getRowCount() - 1);
}

@Override
public void moveTo(int rowIndex) {
    if (rowIndex < 0) {
        moveLast();
    } else if (rowIndex >= tblChiTietHoaDon.getRowCount()) {
        moveFirst();
    } else {
        tblChiTietHoaDon.clearSelection();
        tblChiTietHoaDon.setRowSelectionInterval(rowIndex, rowIndex);
        edit();
    }
}

public void fillToTableTheoDieuKien() {
    try {
        ChiTietHoaDonImpl dao = new ChiTietHoaDonImpl(); 
        String keyword = txtFind.getText().trim();
        List<ChiTietHoaDon> list = dao.findByKeyword(keyword);

        DefaultTableModel model = (DefaultTableModel) tblChiTietHoaDon.getModel();
        model.setRowCount(0);

        if (list.isEmpty()) {
            UDialog.alert("Không tìm thấy kết quả.");
            return;
        }

        for (ChiTietHoaDon ct : list) {
            Object[] row = {
                ct.getMaHD(),
                ct.getMaMon(),
                ct.getSoLuong(),
                ct.getGhiChu(),
                ct.getTrangThai(),
                
            };
            model.addRow(row);
        }
    } catch (Exception e) {
        e.printStackTrace();
        UDialog.alert("Lỗi khi tìm kiếm!");
    }
}

    @Override
    public void open() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
